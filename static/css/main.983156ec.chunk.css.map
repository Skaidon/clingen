{"version":3,"sources":["C:/Users/Adam/Documents/Development/stanford/src/C:/Users/Adam/Documents/Development/stanford/src/index.css","main.983156ec.chunk.css","C:/Users/Adam/Documents/Development/stanford/src/components/title/C:/Users/Adam/Documents/Development/stanford/src/components/title/C:/Users/Adam/Documents/Development/stanford/src/components/title/title.scss","C:/Users/Adam/Documents/Development/stanford/src/components/title/C:/Users/Adam/Documents/Development/stanford/src/components/title/C:/Users/Adam/Documents/Development/stanford/node_modules/rfs/scss.scss","C:/Users/Adam/Documents/Development/stanford/src/components/curation-data/C:/Users/Adam/Documents/Development/stanford/src/components/curation-data/C:/Users/Adam/Documents/Development/stanford/src/components/curation-data/curationData.scss","C:/Users/Adam/Documents/Development/stanford/src/components/curation-data/C:/Users/Adam/Documents/Development/stanford/src/components/curation-data/C:/Users/Adam/Documents/Development/stanford/node_modules/rfs/scss.scss","C:/Users/Adam/Documents/Development/stanford/src/components/curation-criteria/C:/Users/Adam/Documents/Development/stanford/src/components/curation-criteria/C:/Users/Adam/Documents/Development/stanford/src/components/curation-criteria/curationCriteria.scss","C:/Users/Adam/Documents/Development/stanford/src/components/curation-criteria/C:/Users/Adam/Documents/Development/stanford/src/components/curation-criteria/C:/Users/Adam/Documents/Development/stanford/node_modules/rfs/scss.scss","C:/Users/Adam/Documents/Development/stanford/src/components/tabs/progress-bar/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/progress-bar/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/progress-bar/progressBar.scss","C:/Users/Adam/Documents/Development/stanford/src/components/tabs/progress-bar/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/progress-bar/C:/Users/Adam/Documents/Development/stanford/node_modules/rfs/scss.scss","C:/Users/Adam/Documents/Development/stanford/src/components/tabs/basic-information/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/basic-information/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/basic-information/basicInfo.scss","C:/Users/Adam/Documents/Development/stanford/src/components/tabs/basic-information/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/basic-information/C:/Users/Adam/Documents/Development/stanford/node_modules/rfs/scss.scss","C:/Users/Adam/Documents/Development/stanford/src/components/tabs/population/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/population/C:/Users/Adam/Documents/Development/stanford/src/components/tabs/population/population.scss","C:/Users/Adam/Documents/Development/stanford/src/components/basicHeader/C:/Users/Adam/Documents/Development/stanford/src/components/basicHeader/C:/Users/Adam/Documents/Development/stanford/src/components/basicHeader/basicHeader.scss","C:/Users/Adam/Documents/Development/stanford/src/C:/Users/Adam/Documents/Development/stanford/src/C:/Users/Adam/Documents/Development/stanford/src/App.scss","C:/Users/Adam/Documents/Development/stanford/src/C:/Users/Adam/Documents/Development/stanford/src/C:/Users/Adam/Documents/Development/stanford/node_modules/rfs/scss.scss","C:/Users/Adam/Documents/Development/stanford/src/scss/C:/Users/Adam/Documents/Development/stanford/src/scss/C:/Users/Adam/Documents/Development/stanford/src/scss/tabs.scss","C:/Users/Adam/Documents/Development/stanford/src/scss/tabs.scss","C:/Users/Adam/Documents/Development/stanford/src/scss/C:/Users/Adam/Documents/Development/stanford/src/scss/tabs.scss"],"names":[],"mappings":"AAAA,KACE,QAAA,CACA,SAAA,CACA,mICEY,CDCZ,kCAAA,CACA,iCCCF,CDEA,KACE,uECEF,CCXA,WACE,YAAA,CACA,iBAAA,CACA,eAAgB,CAHlB,kBAKI,wBAAA,CACA,wBAAA,CACA,iBAAA,CACA,2CAAA,CACA,UAAA,CACA,cAAA,CACA,WAAA,CC6HE,iBAAA,CD3HF,mBAAA,CACA,YAAA,CACA,gBAAA,CACA,0EAAA,CAAA,kEAAA,CACA,kBAAmB,CAjBvB,wBAmBM,oBAAA,CACA,wBAAyB,CApB/B,cCiKQ,gBAAA,CDxIJ,gBAAA,CACA,aAAA,CACA,sBAAuB,CC6EvB,0BDxGJ,cCsKU,gCAXiD,CAAA,CD3J3D,8BA6BM,aAAA,CC2GA,kBAAW,CDxIjB,cCwIM,gBAAA,CDrGF,eAAA,CACA,eAAgB,CAIpB,YACE,yBAAA,CACA,UAAA,CC8FI,iBAAA,CD5FJ,UAAA,CACA,WAAY,CE3Cd,cAEE,QAAA,CACA,eAAgB,CAIhB,gBACE,SAAU,CACV,oCAFF,gBAGI,uBAAA,CACA,aAAA,CACA,SAAU,CAAA,CAGb,mBAEG,wBAAA,CACA,UAAW,CACX,oCAJH,mBAKK,iBAAkB,CAAA,CALvB,cAUG,+BAAA,CC6GA,iBAAA,CD3GA,eAAA,CACA,eAAA,CACA,kBAAA,CACA,YAAA,CACA,kBAAmB,CAhBtB,cAoBG,QAAS,CApBZ,oBAyBK,oBAAqB,CAzB1B,sCA4BS,WAAA,CACA,oBAAA,CACA,YAAa,CE/CzB,mBAEE,kBAAmB,CAFrB,2CACE,2BAAA,CAAA,mBAIoB,CALtB,wBAKI,iBAAkB,CALtB,+BAOM,qBAAA,CACA,qBAAA,CACA,iBAAA,CACA,cAAA,CC8HA,gBAAA,CD5HA,eAAA,CACA,eAAA,CACA,kBAAA,CACA,kBAAmB,CAfzB,2DAkBM,aAAc,CAlBpB,kEAoBQ,eAAgB,CApBxB,qDAwBM,4BAAA,CACA,yBAA0B,CAzBhC,qDA4BM,2BAAA,CACA,wBAAyB,CA7B/B,oCAiCQ,gBAAiB,CAjCzB,4CAiDQ,aAV6B,CAvCrC,8CAiDQ,aAV0D,CAvClE,4CAiDQ,aATqB,CAxC7B,gDAiDQ,aAToD,CAxC5D,iDAiDQ,aAR0B,CAzClC,sCAiDQ,aAR+C,CAarD,qCAtDF,mBAuDI,aAAc,CAvDlB,0BAyDM,iBAAkB,CAAA,CAItB,oCA7DF,mBA8DI,eAAgB,CAAA,CE9DpB,gBACE,oBAAA,CAAA,YAAA,CACA,oCAAA,CAAA,4BAA6B,CAF/B,4BAII,wBAAA,CACA,qBAAA,CACA,iBAAA,CACA,kBAAA,CACA,cAAA,CACA,SAAU,CATd,oBAYI,2BAAA,CAAA,mBAAA,CACA,eAAA,CACA,SAAU,CAdd,+BAgBM,cAAe,CAhBrB,wBAmBM,QAAA,CACA,eAAgB,CAKtB,cC+GM,kBAAW,CD3GjB,cACE,eAAA,CACA,UAAW,CAGb,eCsGM,gBAAA,CDpGJ,gBAAiB,CEpCnB,SACE,eAAA,CAEA,qBAAA,CAAA,qBAAA,CACA,iBAAA,CACA,eAAA,CACA,YAAa,CAGf,SACE,6BAAA,CACA,eAAgB,CAFlB,YAII,aAAA,CC2HE,iBAAA,CDzHF,YAAA,CACA,iBAAkB,CAPtB,YAUI,eAAA,CACA,QAAA,CACA,SAAU,CAZd,6BAiBQ,oBAAA,CACA,aAAA,CACA,eAAA,CACA,sBAAA,CACA,qBAAA,CACA,kBAAmB,CAM3B,OACE,qBAAA,CACA,4BAAA,CACA,iBAAkB,CAClB,eACE,mCAAA,CACA,0BAAA,CACA,2BAAA,CACA,iBAAA,CACA,eAAgB,CAElB,YACE,oBAAqB,CADtB,2BAGG,aAAA,CACA,wBAAA,CACA,oBAAqB,CAhB3B,oBAoBI,YAAA,CACA,eAAA,CC8EE,cAAA,CD5EF,aAAc,CAIlB,OACE,UAAA,CACA,cAAe,CAFjB,UAII,yBAAA,CACA,mBAAA,CACA,WAAA,CACA,kBAAA,CACA,SAAU,CARd,oBAYI,eAAgB,CAZpB,UAeI,WAAA,CACA,mBAAoB,CAIxB,gCAEI,YAAA,CACA,qBAAA,CACA,SAAU,CEzFZ,2BACE,qBAAA,CACA,qBAAA,CACA,YAAA,CACA,iBAAkB,CAEpB,sBACE,wBAAA,CACA,UAAA,CACA,cAAA,CACA,aAAA,CACA,QAAA,CACA,gBAAA,CACA,oBAAqB,CAPtB,4BASG,wBAAyB,CAT5B,4BAaG,iBAAA,CAAA,wBAAA,CACA,UAAA,CACA,oBAAA,CACA,SAAA,CACA,WAAA,CACA,iBAAkB,CAlBrB,sCAsBK,QAAA,CACA,+BAAA,CAAA,uBAAwB,CAvB7B,oCA4BK,OAAA,CACA,iCAAA,CAAA,yBAA0B,CAMlC,mBAEE,UAAA,CACA,qCAAA,CAAA,6BAA8B,CAHhC,2CACE,2BAAA,CAAA,mBAKa,CANf,wBAMI,UAAW,CANf,oCAQM,eAAgB,CARtB,mCAWM,SAAU,CAXhB,8BAcM,oBAAA,CACA,eAAA,CACA,gBAAiB,CAhBvB,iCAqBM,oBAAA,CACA,cAAA,CACA,SAAU,CAKhB,+CATM,qBAAA,CACA,2CAoBO,CAZb,cACE,qBAAA,CAEA,iBAAA,CAEA,UAAA,CACA,aAAA,CACA,cAAA,CACA,WAAA,CACA,mBAAA,CACA,gBAAA,CACA,4EAAA,CAAA,oEAAA,CACA,UAAW,CClFb,UAEI,iBAAkB,CAFtB,QAKI,eAAgB,CALpB,SAQI,gBAAiB,CCNrB,KACE,qBAAA,CACA,UAAA,CACA,oDAAA,CCqII,iBAAA,CDnIJ,mBAAA,CACA,eAAgB,CAGlB,KACE,iBAAkB,CAGpB,EACE,aAAA,CACA,oBAAqB,CAFvB,gBAKI,aAAA,CACA,yBAA0B,CEpB5B,mBACE,oBAAA,CACA,QAAA,CACA,SAAU,CAEV,uBACE,oBAAqB,CACrB,oCAFD,8CAIK,gBAAkB,CAAA,CAK1B,iBACE,4BAAA,CACA,WAAA,CACA,iBAAA,CACA,SAAA,CACA,2BAAA,CACA,eAAgB,CAGlB,eACE,cAAe,CADhB,qBAGG,SAAU,CAEZ,oBACE,4BAAA,CACA,eAAA,CAEA,iBAAA,CACA,kBAAA,CACA,iBAAA,CACA,uEAAA,CAAA,+DAAA,CAAA,uDAAA,CAAA,sFAAA,CACA,uECFF,ChBmWA,oCACE,oBiBnWF,yBAAA,CDGA,iCAAA,CAAA,ChBmWA,8Be3VI,kBAAA,CACA,oBAAA,CACA,gBAAA,CEPF,UAAA,CDGA,oBAAA,ChBmWA,oCACE,8BiBnWE,uBAAA,CDGA,+BAAA,ChBmWA,oCe5VE,UAAA,CACA,eAAA,CACA,UAAA,CACA,iBAAO,CENP,WAAQ,CDGR,MAAA,ChBmWA,OAAU,CAAE,CAExB,oCACE,sBe5VG,6CAEY,CAFZ,qCAAA,CERD,6BAAA,CDMA,wDAAA,ChBmWA,+BACE,mCiBxWF,CDOA,2BAAA,ChBmWA,qEACE,+BiBzWF,CDQA,uBAAA,ChBmWA,sCACE,kCgBlWQ,ChBmWA,0BAA6B,CAAE,CAE7C,oCACE,mBiBzWE,aAAA,CDSA,SAAA,ChBmWA,uBgBjWF,aAAA,ChBmWA,oBACE,eAAkB,CAAE","file":"main.983156ec.chunk.css","sourcesContent":["body {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n","body {\n  margin: 0;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}\n\n.title-box {\n  padding: 0 1%;\n  position: relative;\n  text-align: left; }\n  .title-box > button {\n    border: 1px solid #1b75bc;\n    background-color: #1b75bc;\n    border-radius: 2px;\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n    color: #fff;\n    cursor: pointer;\n    float: right;\n    font-size: 0.875rem;\n    line-height: 1.42857;\n    outline: none;\n    padding: 6px 12px;\n    -webkit-transition: border 0.3s ease-in-out, background-color 0.3s ease-in-out;\n    transition: border 0.3s ease-in-out, background-color 0.3s ease-in-out;\n    white-space: nowrap; }\n    .title-box > button:hover {\n      border-color: #293894;\n      background-color: #293894; }\n  .title-box > h1 {\n    font-size: 2.5rem;\n    margin: 5px 0 2px;\n    max-width: 91%;\n    text-overflow: ellipsis; }\n    @media (max-width: 1200px) {\n      .title-box > h1 {\n        font-size: calc(1.375rem + 1.5vw) ; } }\n    .title-box > h1 .fa-info-circle {\n      color: #31708f;\n      font-size: 0.9375rem; }\n  .title-box > h2 {\n    font-size: 1.1rem;\n    font-weight: 300;\n    line-height: 1.2; }\n\n.ra-tooltip {\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  font-size: 0.875rem;\n  padding: 1%;\n  width: 400px; }\n\n.grid-item,\ndd {\n  margin: 0;\n  text-align: left; }\n\n.grid-container {\n  margin: 1%; }\n  @media screen and (max-width: 760px) {\n    .grid-container {\n      display: block !important;\n      margin: 0 auto;\n      width: 80%; } }\n\n.grid-item.greenBg {\n  background-color: #d7ecd7;\n  padding: 2%; }\n  @media screen and (max-width: 760px) {\n    .grid-item.greenBg {\n      margin-bottom: 3px; } }\n\n.grid-item h4 {\n  border-bottom: 1px solid #c9c9c9;\n  font-size: 1.25rem;\n  font-weight: 500;\n  line-height: 1.1;\n  margin-bottom: 10px;\n  margin-top: 0;\n  padding-bottom: 5px; }\n\n.grid-item dl {\n  margin: 0; }\n\n.grid-item dd .link {\n  display: inline-block; }\n  .grid-item dd .link:first-child::after {\n    content: \"|\";\n    display: inline-block;\n    margin: 0 4px; }\n\n.curation-criteria {\n  display: -webkit-inline-flex;\n  display: inline-flex;\n  margin: 0 auto 25px; }\n  .curation-criteria .btn {\n    display: -webkit-inline-flex;\n    display: inline-flex;\n    text-align: center; }\n    .curation-criteria .btn button {\n      background-color: #fff;\n      border: 1px solid #ccc;\n      border-radius: 3px;\n      cursor: pointer;\n      font-size: 0.75rem;\n      font-weight: bold;\n      line-height: 1.5;\n      padding: 5px 0.665em;\n      white-space: nowrap; }\n    .curation-criteria .btn:not(:first-child):not(:last-child) {\n      margin-left: 0; }\n      .curation-criteria .btn:not(:first-child):not(:last-child) button {\n        border-radius: 0; }\n    .curation-criteria .btn:first-child:not(:last-child) {\n      border-bottom-right-radius: 0;\n      border-top-right-radius: 0; }\n    .curation-criteria .btn:last-child:not(:first-child) {\n      border-bottom-left-radius: 0;\n      border-top-left-radius: 0; }\n    .curation-criteria .btn + .btn button {\n      margin-left: -1px; }\n  .curation-criteria button.benign-supporting {\n    color: #2b67a0; }\n  .curation-criteria button.pathogenic-moderate {\n    color: #d36735; }\n  .curation-criteria button.pathogenic-strong {\n    color: #d33535; }\n  .curation-criteria button.pathogenic-supporting {\n    color: #728b42; }\n  .curation-criteria button.pathogenic-very-strong {\n    color: #d33535; }\n  .curation-criteria button.stand-alone {\n    color: #62387e; }\n  @media screen and (max-width: 1140px) {\n    .curation-criteria {\n      display: block; }\n      .curation-criteria button {\n        margin-bottom: 3px; } }\n  @media screen and (max-width: 740px) {\n    .curation-criteria {\n      margin-top: 22px; } }\n\n.flex-container {\n  display: -webkit-flex;\n  display: flex;\n  -webkit-justify-content: space-evenly;\n          justify-content: space-evenly; }\n  .flex-container.criteriaBox {\n    background-color: #f5f5f5;\n    border: solid 1px #dddddd;\n    border-radius: 4px;\n    margin: 0 auto 10px;\n    padding: 10px 0;\n    width: 90%; }\n  .flex-container > div {\n    display: -webkit-inline-flex;\n    display: inline-flex;\n    padding-left: 4%;\n    width: 33%; }\n    .flex-container > div:last-child {\n      padding-left: 0; }\n    .flex-container > div > div {\n      margin: 0;\n      text-align: left; }\n\n.criteriaIcon {\n  font-size: 1.125rem; }\n\n.criteriaCopy {\n  padding-left: 5%;\n  width: 100%; }\n\n.criteriaValue {\n  font-size: 0.75rem;\n  line-height: 22px; }\n\n.callout {\n  background: #fff;\n  border: 1px solid #eee;\n  border-left-width: 5px;\n  border-radius: 3px;\n  margin: 0 0 20px 0;\n  padding: 20px; }\n\n.genomic {\n  border-left: 3px solid #1b809e;\n  text-align: left; }\n  .genomic > h4 {\n    color: #1b809e;\n    font-size: 1.25rem;\n    margin-top: 0;\n    margin-bottom: 5px; }\n  .genomic > ul {\n    list-style: none;\n    margin: 0;\n    padding: 0; }\n  .genomic li > span:first-child {\n    display: inline-block;\n    max-width: 89%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    vertical-align: bottom;\n    white-space: nowrap; }\n\n.panel {\n  background-color: #fff;\n  border: 1px solid transparent;\n  border-radius: 2px; }\n  .panel-heading {\n    border-bottom: 1px solid transparent;\n    border-top-left-radius: 3px;\n    border-top-right-radius: 3px;\n    padding: 10px 15px;\n    text-align: left; }\n  .panel-info {\n    border-color: #bce8f1; }\n    .panel-info > .panel-heading {\n      color: #31708f;\n      background-color: #d9edf7;\n      border-color: #bce8f1; }\n  .panel .panel-title {\n    margin-top: 0;\n    margin-bottom: 0;\n    font-size: 1rem;\n    color: inherit; }\n\n.table {\n  width: 100%;\n  max-width: 100%; }\n  .table td {\n    border-top: 1px solid #ddd;\n    line-height: 1.42857;\n    padding: 8px;\n    vertical-align: top;\n    width: 20%; }\n  .table td,\n  .table th {\n    text-align: left; }\n  .table th {\n    padding: 8px;\n    line-height: 1.42857; }\n\n.all-existing-interpretaions th {\n  border-top: 0;\n  vertical-align: bottom;\n  width: 20%; }\n\n.Collapsible__contentInner {\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-top: 0;\n  padding: 20px 30px; }\n\n.Collapsible__trigger {\n  background-color: #2697d1;\n  color: #fff;\n  cursor: pointer;\n  display: block;\n  margin: 0;\n  padding: 5px 10px;\n  text-decoration: none; }\n  .Collapsible__trigger:hover {\n    background-color: #293894; }\n  .Collapsible__trigger:after {\n    border: solid #fff;\n    border-width: 0 3px 3px 0;\n    content: \"\";\n    display: inline-block;\n    left: 10px;\n    padding: 3px;\n    position: relative; }\n  .Collapsible__trigger.is-closed:after {\n    top: -2px;\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg); }\n  .Collapsible__trigger.is-open:after {\n    top: 2px;\n    -webkit-transform: rotate(-135deg);\n            transform: rotate(-135deg); }\n\n.flexbox-container {\n  display: -webkit-inline-flex;\n  display: inline-flex;\n  width: 100%;\n  -webkit-justify-content: space-between;\n          justify-content: space-between; }\n  .flexbox-container > .col {\n    display: -webkit-inline-flex;\n    display: inline-flex;\n    padding: 1%; }\n    .flexbox-container > .col:first-child {\n      text-align: left; }\n    .flexbox-container > .col:last-child {\n      width: 90%; }\n    .flexbox-container > .col label {\n      display: inline-block;\n      font-weight: 600;\n      margin-left: 2.5%; }\n    .flexbox-container > .col textarea {\n      border: 1px solid #ccc;\n      box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n      display: inline-block;\n      margin-left: 5%;\n      width: 80%; }\n\n.form-control {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  color: #555;\n  display: block;\n  font-size: 14px;\n  height: 34px;\n  line-height: 1.42857;\n  padding: 6px 12px;\n  -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\n  width: 100%; }\n\nh1.center {\n  text-align: center; }\n\nh1.left {\n  text-align: left; }\n\nh1.right {\n  text-align: right; }\n\nbody {\n  background-color: #fff;\n  color: #333;\n  font-family: \"Helvetica Neue\", \"Lato\", Helvetica, sans-serif;\n  font-size: 0.875rem;\n  line-height: 1.42857;\n  padding: 5px 0 0; }\n\n.App {\n  text-align: center; }\n\na {\n  color: #337ab7;\n  text-decoration: none; }\n  a:focus, a:hover {\n    color: #23527c;\n    text-decoration: underline; }\n\n.FancyTabs-tablist {\n  list-style-type: none;\n  margin: 0;\n  padding: 0; }\n  .FancyTabs-tablistItem {\n    display: inline-block; }\n    @media screen and (min-width: 750px) {\n      .FancyTabs-tablistItem + .FancyTabs-tablistItem {\n        margin-left: 0.3em; } }\n\n.FancyTabs-panel {\n  border-top: 5px solid #2697d1;\n  padding: 1em;\n  position: relative;\n  z-index: 2;\n  background: rgba(0, 0, 0, 0.025);\n  overflow: hidden; }\n\n.FancyTabs-tab {\n  cursor: pointer; }\n  .FancyTabs-tab:focus {\n    outline: 0; }\n  .FancyTabs-tabInner {\n    border: 1px solid transparent;\n    border-bottom: 0;\n    position: relative;\n    padding: 15px 20px;\n    background: #f1f1f1;\n    position: relative;\n    -webkit-transition: background 0.2s linear, -webkit-transform 0.2s ease-out;\n    transition: background 0.2s linear, -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out, background 0.2s linear;\n    transition: transform 0.2s ease-out, background 0.2s linear, -webkit-transform 0.2s ease-out;\n    -webkit-transition: -webkit-transform 0.2s ease-out,\r background 0.2s linear; }\n    @media screen and (min-width: 750px) {\n      .FancyTabs-tabInner {\n        transform: translateY(5px);\n        -webkit-transform: translateY(5px); } }\n    .FancyTabs-tabInner.is-active {\n      background: #2697d1;\n      border-color: #41d0cb;\n      border-width: 1px;\n      color: #fff;\n      text-decoration: none; }\n      @media screen and (min-width: 750px) {\n        .FancyTabs-tabInner.is-active {\n          transform: translateY(0);\n          -webkit-transform: translateY(0); }\n          .FancyTabs-tabInner.is-active::after {\n            content: \"\";\n            background: #fff;\n            height: 1px;\n            position: absolute;\n            bottom: -1px;\n            left: 0;\n            right: 0; } }\n\n@media screen and (min-width: 750px) {\n  .FancyTabs-panelInner {\n    -webkit-transition: -webkit-transform 0.3s ease;\n    transition: -webkit-transform 0.3s ease;\n    transition: transform 0.3s ease;\n    transition: transform 0.3s ease, -webkit-transform 0.3s ease; }\n    .FancyTabs-panelInner.is-enter {\n      -webkit-transform: translateY(-120%);\n              transform: translateY(-120%); }\n    .FancyTabs-panelInner.is-enter-active, .FancyTabs-panelInner.is-leave {\n      -webkit-transform: translateY(0);\n              transform: translateY(0); }\n    .FancyTabs-panelInner.is-leave-active {\n      -webkit-transform: translateY(120%);\n              transform: translateY(120%); } }\n\n@media screen and (max-width: 750px) {\n  .FancyTabs-tablist {\n    margin: 0 auto;\n    width: 70%; }\n    .FancyTabs-tablistItem {\n      display: block; }\n  .FancyTabs-tabInner {\n    padding: 1.5% 1%; } }\n\n","@import \"~rfs/scss\";\r\n\r\n.title-box {\r\n  padding: 0 1%;\r\n  position: relative;\r\n  text-align: left;\r\n  > button {\r\n    border: 1px solid #1b75bc;\r\n    background-color: #1b75bc;\r\n    border-radius: 2px;\r\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n    color: #fff;\r\n    cursor: pointer;\r\n    float: right;\r\n    @include font-size(14px);\r\n    line-height: 1.42857;\r\n    outline: none;\r\n    padding: 6px 12px;\r\n    transition: border 0.3s ease-in-out, background-color 0.3s ease-in-out;\r\n    white-space: nowrap;\r\n    &:hover {\r\n      border-color: #293894;\r\n      background-color: #293894;\r\n    }\r\n  }\r\n  > h1 {\r\n    @include font-size(40px);\r\n    margin: 5px 0 2px;\r\n    max-width: 91%;\r\n    text-overflow: ellipsis;\r\n    .fa-info-circle {\r\n      color: #31708f;\r\n      @include font-size(15px);\r\n    }\r\n  }\r\n  > h2 {\r\n    @include font-size(1.1rem);\r\n    font-weight: 300;\r\n    line-height: 1.2;\r\n  }\r\n}\r\n\r\n.ra-tooltip {\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: #fff;\r\n  @include font-size(14px);\r\n  padding: 1%;\r\n  width: 400px;\r\n}\r\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive font sizes\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n@if $rfs-font-size-unit != rem and $rfs-font-size-unit != px {\n  @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize font size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-disable-class {\n  @if $rfs-class == \"disable\" {\n    // Adding an extra class increases specificity, which prevents the media query to override the font size\n    &,\n    .disable-responsive-font-size &,\n    &.disable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-enable-class {\n  @if $rfs-class == \"enable\" {\n    .enable-responsive-font-size &,\n    &.enable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query($mq-value) {\n  @if $rfs-two-dimensional {\n    @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n      @content;\n    }\n  }\n  @else {\n    @media (max-width: #{$mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Responsive font size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Remove unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font size\n    $rfs-static: if($rfs-font-size-unit == rem, #{$fs / $rfs-rem-value}rem, #{$fs}px);\n\n    // Only add the media query if the font size is bigger than the minimum font size\n    @if $fs <= $rfs-base-font-size or not $enable-responsive-font-sizes {\n      font-size: #{$rfs-static}#{$rfs-suffix};\n    }\n    @else {\n      // Calculate the minimum font size for $fs\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between $fs and the minimum font size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // Use `vmin` if two-dimensional is enabled\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n\n      // Breakpoint formatting\n      $mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n\n      @include _rfs-disable-class {\n        font-size: #{$rfs-static}#{$rfs-suffix};\n      }\n\n      @include _rfs-media-query($mq-value) {\n        @include _rfs-enable-class {\n          font-size: $rfs-fluid;\n        }\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixins use RFS to rescale the font size\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n","@import \"~rfs/scss\";\r\n\r\n$sm-break: 760px;\r\n\r\n.grid-item,\r\ndd {\r\n  margin: 0;\r\n  text-align: left;\r\n}\r\n\r\n.grid {\r\n  &-container {\r\n    margin: 1%;\r\n    @media screen and (max-width: $sm-break) {\r\n      display: block !important;\r\n      margin: 0 auto;\r\n      width: 80%;\r\n    }\r\n  }\r\n  &-item {\r\n    &.greenBg {\r\n      background-color: #d7ecd7;\r\n      padding: 2%;\r\n      @media screen and (max-width: $sm-break) {\r\n        margin-bottom: 3px;\r\n      }\r\n    }\r\n\r\n    h4 {\r\n      border-bottom: 1px solid #c9c9c9;\r\n      @include font-size(1.25rem);\r\n      font-weight: 500;\r\n      line-height: 1.1;\r\n      margin-bottom: 10px;\r\n      margin-top: 0;\r\n      padding-bottom: 5px;\r\n    }\r\n\r\n    dl {\r\n      margin: 0;\r\n    }\r\n\r\n    dd {\r\n      .link {\r\n        display: inline-block;\r\n        &:first-child {\r\n          &::after {\r\n            content: \"|\";\r\n            display: inline-block;\r\n            margin: 0 4px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive font sizes\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n@if $rfs-font-size-unit != rem and $rfs-font-size-unit != px {\n  @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize font size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-disable-class {\n  @if $rfs-class == \"disable\" {\n    // Adding an extra class increases specificity, which prevents the media query to override the font size\n    &,\n    .disable-responsive-font-size &,\n    &.disable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-enable-class {\n  @if $rfs-class == \"enable\" {\n    .enable-responsive-font-size &,\n    &.enable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query($mq-value) {\n  @if $rfs-two-dimensional {\n    @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n      @content;\n    }\n  }\n  @else {\n    @media (max-width: #{$mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Responsive font size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Remove unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font size\n    $rfs-static: if($rfs-font-size-unit == rem, #{$fs / $rfs-rem-value}rem, #{$fs}px);\n\n    // Only add the media query if the font size is bigger than the minimum font size\n    @if $fs <= $rfs-base-font-size or not $enable-responsive-font-sizes {\n      font-size: #{$rfs-static}#{$rfs-suffix};\n    }\n    @else {\n      // Calculate the minimum font size for $fs\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between $fs and the minimum font size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // Use `vmin` if two-dimensional is enabled\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n\n      // Breakpoint formatting\n      $mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n\n      @include _rfs-disable-class {\n        font-size: #{$rfs-static}#{$rfs-suffix};\n      }\n\n      @include _rfs-media-query($mq-value) {\n        @include _rfs-enable-class {\n          font-size: $rfs-fluid;\n        }\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixins use RFS to rescale the font size\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n","@import \"~rfs/scss\";\r\n\r\n.curation-criteria {\r\n  display: inline-flex;\r\n  margin: 0 auto 25px;\r\n  .btn {\r\n    display: inline-flex;\r\n    text-align: center;\r\n    button {\r\n      background-color: #fff;\r\n      border: 1px solid #ccc;\r\n      border-radius: 3px;\r\n      cursor: pointer;\r\n      @include rfs(12);\r\n      font-weight: bold;\r\n      line-height: 1.5;\r\n      padding: 5px 0.665em;\r\n      white-space: nowrap;\r\n    }\r\n    &:not(:first-child):not(:last-child) {\r\n      margin-left: 0;\r\n      button {\r\n        border-radius: 0;\r\n      }\r\n    }\r\n    &:first-child:not(:last-child) {\r\n      border-bottom-right-radius: 0;\r\n      border-top-right-radius: 0;\r\n    }\r\n    &:last-child:not(:first-child) {\r\n      border-bottom-left-radius: 0;\r\n      border-top-left-radius: 0;\r\n    }\r\n    & + .btn {\r\n      button {\r\n        margin-left: -1px;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Button colors:\r\n  $buttons: benign-supporting #2b67a0, pathogenic-moderate #d36735,\r\n    pathogenic-strong #d33535, pathogenic-supporting #728b42,\r\n    pathogenic-very-strong #d33535, stand-alone #62387e;\r\n\r\n  button {\r\n    @each $button in $buttons {\r\n      $key: nth($button, 1);\r\n      $value: nth($button, 2);\r\n\r\n      &.#{$key} {\r\n        color: $value;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1140px) {\r\n    display: block;\r\n    button {\r\n      margin-bottom: 3px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 740px) {\r\n    margin-top: 22px;\r\n  }\r\n}\r\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive font sizes\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n@if $rfs-font-size-unit != rem and $rfs-font-size-unit != px {\n  @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize font size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-disable-class {\n  @if $rfs-class == \"disable\" {\n    // Adding an extra class increases specificity, which prevents the media query to override the font size\n    &,\n    .disable-responsive-font-size &,\n    &.disable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-enable-class {\n  @if $rfs-class == \"enable\" {\n    .enable-responsive-font-size &,\n    &.enable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query($mq-value) {\n  @if $rfs-two-dimensional {\n    @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n      @content;\n    }\n  }\n  @else {\n    @media (max-width: #{$mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Responsive font size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Remove unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font size\n    $rfs-static: if($rfs-font-size-unit == rem, #{$fs / $rfs-rem-value}rem, #{$fs}px);\n\n    // Only add the media query if the font size is bigger than the minimum font size\n    @if $fs <= $rfs-base-font-size or not $enable-responsive-font-sizes {\n      font-size: #{$rfs-static}#{$rfs-suffix};\n    }\n    @else {\n      // Calculate the minimum font size for $fs\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between $fs and the minimum font size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // Use `vmin` if two-dimensional is enabled\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n\n      // Breakpoint formatting\n      $mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n\n      @include _rfs-disable-class {\n        font-size: #{$rfs-static}#{$rfs-suffix};\n      }\n\n      @include _rfs-media-query($mq-value) {\n        @include _rfs-enable-class {\n          font-size: $rfs-fluid;\n        }\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixins use RFS to rescale the font size\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n","@import \"~rfs/scss\";\r\n\r\n.flex-container {\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  &.criteriaBox {\r\n    background-color: #f5f5f5;\r\n    border: solid 1px #dddddd;\r\n    border-radius: 4px;\r\n    margin: 0 auto 10px;\r\n    padding: 10px 0;\r\n    width: 90%;\r\n  }\r\n  > div {\r\n    display: inline-flex;\r\n    padding-left: 4%;\r\n    width: 33%;\r\n    &:last-child {\r\n      padding-left: 0;\r\n    }\r\n    > div {\r\n      margin: 0;\r\n      text-align: left;\r\n    }\r\n  }\r\n}\r\n\r\n.criteriaIcon {\r\n  @include font-size(18px);\r\n}\r\n\r\n.criteriaCopy {\r\n  padding-left: 5%;\r\n  width: 100%;\r\n}\r\n\r\n.criteriaValue {\r\n  @include font-size(12px);\r\n  line-height: 22px;\r\n}\r\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive font sizes\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n@if $rfs-font-size-unit != rem and $rfs-font-size-unit != px {\n  @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize font size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-disable-class {\n  @if $rfs-class == \"disable\" {\n    // Adding an extra class increases specificity, which prevents the media query to override the font size\n    &,\n    .disable-responsive-font-size &,\n    &.disable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-enable-class {\n  @if $rfs-class == \"enable\" {\n    .enable-responsive-font-size &,\n    &.enable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query($mq-value) {\n  @if $rfs-two-dimensional {\n    @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n      @content;\n    }\n  }\n  @else {\n    @media (max-width: #{$mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Responsive font size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Remove unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font size\n    $rfs-static: if($rfs-font-size-unit == rem, #{$fs / $rfs-rem-value}rem, #{$fs}px);\n\n    // Only add the media query if the font size is bigger than the minimum font size\n    @if $fs <= $rfs-base-font-size or not $enable-responsive-font-sizes {\n      font-size: #{$rfs-static}#{$rfs-suffix};\n    }\n    @else {\n      // Calculate the minimum font size for $fs\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between $fs and the minimum font size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // Use `vmin` if two-dimensional is enabled\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n\n      // Breakpoint formatting\n      $mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n\n      @include _rfs-disable-class {\n        font-size: #{$rfs-static}#{$rfs-suffix};\n      }\n\n      @include _rfs-media-query($mq-value) {\n        @include _rfs-enable-class {\n          font-size: $rfs-fluid;\n        }\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixins use RFS to rescale the font size\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n","@import \"~rfs/scss\";\r\n\r\n.callout {\r\n  background: #fff;\r\n  border: 1px solid #eee;\r\n  border-left-width: 5px;\r\n  border-radius: 3px;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n}\r\n\r\n.genomic {\r\n  border-left: 3px solid #1b809e;\r\n  text-align: left;\r\n  > h4 {\r\n    color: #1b809e;\r\n    @include font-size(1.25rem);\r\n    margin-top: 0;\r\n    margin-bottom: 5px;\r\n  }\r\n  > ul {\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  li {\r\n    > span {\r\n      &:first-child {\r\n        display: inline-block;\r\n        max-width: 89%;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        vertical-align: bottom;\r\n        white-space: nowrap;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.panel {\r\n  background-color: #fff;\r\n  border: 1px solid transparent;\r\n  border-radius: 2px;\r\n  &-heading {\r\n    border-bottom: 1px solid transparent;\r\n    border-top-left-radius: 3px;\r\n    border-top-right-radius: 3px;\r\n    padding: 10px 15px;\r\n    text-align: left;\r\n  }\r\n  &-info {\r\n    border-color: #bce8f1;\r\n    > .panel-heading {\r\n      color: #31708f;\r\n      background-color: #d9edf7;\r\n      border-color: #bce8f1;\r\n    }\r\n  }\r\n  .panel-title {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    @include font-size(16px);\r\n    color: inherit;\r\n  }\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  max-width: 100%;\r\n  td {\r\n    border-top: 1px solid #ddd;\r\n    line-height: 1.42857;\r\n    padding: 8px;\r\n    vertical-align: top;\r\n    width: 20%;\r\n  }\r\n  td,\r\n  th {\r\n    text-align: left;\r\n  }\r\n  th {\r\n    padding: 8px;\r\n    line-height: 1.42857;\r\n  }\r\n}\r\n\r\n.all-existing-interpretaions {\r\n  th {\r\n    border-top: 0;\r\n    vertical-align: bottom;\r\n    width: 20%;\r\n  }\r\n}\r\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive font sizes\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n@if $rfs-font-size-unit != rem and $rfs-font-size-unit != px {\n  @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize font size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-disable-class {\n  @if $rfs-class == \"disable\" {\n    // Adding an extra class increases specificity, which prevents the media query to override the font size\n    &,\n    .disable-responsive-font-size &,\n    &.disable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-enable-class {\n  @if $rfs-class == \"enable\" {\n    .enable-responsive-font-size &,\n    &.enable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query($mq-value) {\n  @if $rfs-two-dimensional {\n    @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n      @content;\n    }\n  }\n  @else {\n    @media (max-width: #{$mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Responsive font size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Remove unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font size\n    $rfs-static: if($rfs-font-size-unit == rem, #{$fs / $rfs-rem-value}rem, #{$fs}px);\n\n    // Only add the media query if the font size is bigger than the minimum font size\n    @if $fs <= $rfs-base-font-size or not $enable-responsive-font-sizes {\n      font-size: #{$rfs-static}#{$rfs-suffix};\n    }\n    @else {\n      // Calculate the minimum font size for $fs\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between $fs and the minimum font size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // Use `vmin` if two-dimensional is enabled\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n\n      // Breakpoint formatting\n      $mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n\n      @include _rfs-disable-class {\n        font-size: #{$rfs-static}#{$rfs-suffix};\n      }\n\n      @include _rfs-media-query($mq-value) {\n        @include _rfs-enable-class {\n          font-size: $rfs-fluid;\n        }\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixins use RFS to rescale the font size\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n",".Collapsible {\r\n  &__contentInner {\r\n    background-color: #fff;\r\n    border: 1px solid #ddd;\r\n    border-top: 0;\r\n    padding: 20px 30px;\r\n  }\r\n  &__trigger {\r\n    background-color: #2697d1;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    display: block;\r\n    margin: 0;\r\n    padding: 5px 10px;\r\n    text-decoration: none;\r\n    &:hover {\r\n      background-color: #293894;\r\n    }\r\n    &:after {\r\n      border: solid #fff;\r\n      border-width: 0 3px 3px 0;\r\n      content: \"\";\r\n      display: inline-block;\r\n      left: 10px;\r\n      padding: 3px;\r\n      position: relative;\r\n    }\r\n    &.is-closed {\r\n      &:after {\r\n        top: -2px;\r\n        transform: rotate(45deg);\r\n      }\r\n    }\r\n    &.is-open {\r\n      &:after {\r\n        top: 2px;\r\n        transform: rotate(-135deg);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.flexbox-container {\r\n  display: inline-flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  > .col {\r\n    display: inline-flex;\r\n    padding: 1%;\r\n    &:first-child {\r\n      text-align: left;\r\n    }\r\n    &:last-child {\r\n      width: 90%;\r\n    }\r\n    label {\r\n      display: inline-block;\r\n      font-weight: 600;\r\n      margin-left: 2.5%;\r\n    }\r\n    textarea {\r\n      border: 1px solid #ccc;\r\n      box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\r\n      display: inline-block;\r\n      margin-left: 5%;\r\n      width: 80%;\r\n    }\r\n  }\r\n}\r\n\r\n.form-control {\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\r\n  color: #555;\r\n  display: block;\r\n  font-size: 14px;\r\n  height: 34px;\r\n  line-height: 1.42857;\r\n  padding: 6px 12px;\r\n  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;\r\n  width: 100%;\r\n}\r\n","h1 {\r\n  &.center {\r\n    text-align: center;\r\n  }\r\n  &.left {\r\n    text-align: left;\r\n  }\r\n  &.right {\r\n    text-align: right;\r\n  }\r\n}\r\n","@import \"~rfs/scss\";\n\nbody {\n  background-color: #fff;\n  color: #333;\n  font-family: \"Helvetica Neue\", \"Lato\", Helvetica, sans-serif;\n  @include rfs(14);\n  line-height: 1.42857;\n  padding: 5px 0 0;\n}\n\n.App {\n  text-align: center;\n}\n\na {\n  color: #337ab7;\n  text-decoration: none;\n  &:focus,\n  &:hover {\n    color: #23527c;\n    text-decoration: underline;\n  }\n}\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive font sizes\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/master/LICENSE)\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n@if $rfs-font-size-unit != rem and $rfs-font-size-unit != px {\n  @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize font size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-disable-class {\n  @if $rfs-class == \"disable\" {\n    // Adding an extra class increases specificity, which prevents the media query to override the font size\n    &,\n    .disable-responsive-font-size &,\n    &.disable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-enable-class {\n  @if $rfs-class == \"enable\" {\n    .enable-responsive-font-size &,\n    &.enable-responsive-font-size {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query($mq-value) {\n  @if $rfs-two-dimensional {\n    @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n      @content;\n    }\n  }\n  @else {\n    @media (max-width: #{$mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Responsive font size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Remove unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font size\n    $rfs-static: if($rfs-font-size-unit == rem, #{$fs / $rfs-rem-value}rem, #{$fs}px);\n\n    // Only add the media query if the font size is bigger than the minimum font size\n    @if $fs <= $rfs-base-font-size or not $enable-responsive-font-sizes {\n      font-size: #{$rfs-static}#{$rfs-suffix};\n    }\n    @else {\n      // Calculate the minimum font size for $fs\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between $fs and the minimum font size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // Use `vmin` if two-dimensional is enabled\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n\n      // Breakpoint formatting\n      $mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit});\n\n      @include _rfs-disable-class {\n        font-size: #{$rfs-static}#{$rfs-suffix};\n      }\n\n      @include _rfs-media-query($mq-value) {\n        @include _rfs-enable-class {\n          font-size: $rfs-fluid;\n        }\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixins use RFS to rescale the font size\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n",".FancyTabs {\r\n  &-tablist {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    &Item {\r\n      display: inline-block;\r\n      @media screen and (min-width: 750px) {\r\n        + .FancyTabs-tablistItem {\r\n          margin-left: 0.3em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  &-panel {\r\n    border-top: 5px solid #2697d1;\r\n    padding: 1em;\r\n    position: relative;\r\n    z-index: 2;\r\n    background: rgba(0, 0, 0, 0.025);\r\n    overflow: hidden;\r\n  }\r\n\r\n  &-tab {\r\n    cursor: pointer;\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n    &Inner {\r\n      border: 1px solid transparent;\r\n      border-bottom: 0;\r\n      position: relative;\r\n      padding: 15px 20px;\r\n      background: #f1f1f1;\r\n      position: relative;\r\n      transition: transform 0.2s ease-out, background 0.2s linear;\r\n      -webkit-transition: -webkit-transform 0.2s ease-out,\r\n        background 0.2s linear;\r\n      @media screen and (min-width: 750px) {\r\n        transform: translateY(5px);\r\n        -webkit-transform: translateY(5px);\r\n      }\r\n      &.is-active {\r\n        background: #2697d1;\r\n        border-color: #41d0cb;\r\n        border-width: 1px;\r\n        color: #fff;\r\n        text-decoration: none;\r\n        @media screen and (min-width: 750px) {\r\n          transform: translateY(0);\r\n          -webkit-transform: translateY(0);\r\n          &::after {\r\n            content: \"\";\r\n            background: #fff;\r\n            height: 1px;\r\n            position: absolute;\r\n            bottom: -1px;\r\n            left: 0;\r\n            right: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 750px) {\r\n    &-panelInner {\r\n      transition: transform 0.3s ease;\r\n      &.is-enter {\r\n        transform: translateY(-120%);\r\n      }\r\n      &.is-enter-active,\r\n      &.is-leave {\r\n        transform: translateY(0);\r\n      }\r\n      &.is-leave-active {\r\n        transform: translateY(120%);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 750px) {\r\n  .FancyTabs- {\r\n    &tablist {\r\n      margin: 0 auto;\r\n      width: 70%;\r\n      &Item {\r\n        display: block;\r\n      }\r\n    }\r\n    &tab {\r\n      &Inner {\r\n        padding: 1.5% 1%;\r\n      }\r\n    }\r\n  }\r\n}\r\n",".FancyTabs-tablist {\n  list-style-type: none;\n  margin: 0;\n  padding: 0; }\n  .FancyTabs-tablistItem {\n    display: inline-block; }\n    @media screen and (min-width: 750px) {\n      .FancyTabs-tablistItem + .FancyTabs-tablistItem {\n        margin-left: 0.3em; } }\n\n.FancyTabs-panel {\n  border-top: 5px solid #2697d1;\n  padding: 1em;\n  position: relative;\n  z-index: 2;\n  background: rgba(0, 0, 0, 0.025);\n  overflow: hidden; }\n\n.FancyTabs-tab {\n  cursor: pointer; }\n  .FancyTabs-tab:focus {\n    outline: 0; }\n  .FancyTabs-tabInner {\n    border: 1px solid transparent;\n    border-bottom: 0;\n    position: relative;\n    padding: 15px 20px;\n    background: #f1f1f1;\n    position: relative;\n    -webkit-transition: background 0.2s linear, -webkit-transform 0.2s ease-out;\n    transition: background 0.2s linear, -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out, background 0.2s linear;\n    transition: transform 0.2s ease-out, background 0.2s linear, -webkit-transform 0.2s ease-out;\n    -webkit-transition: -webkit-transform 0.2s ease-out,\r background 0.2s linear; }\n    @media screen and (min-width: 750px) {\n      .FancyTabs-tabInner {\n        transform: translateY(5px);\n        -webkit-transform: translateY(5px); } }\n    .FancyTabs-tabInner.is-active {\n      background: #2697d1;\n      border-color: #41d0cb;\n      border-width: 1px;\n      color: #fff;\n      text-decoration: none; }\n      @media screen and (min-width: 750px) {\n        .FancyTabs-tabInner.is-active {\n          transform: translateY(0);\n          -webkit-transform: translateY(0); }\n          .FancyTabs-tabInner.is-active::after {\n            content: \"\";\n            background: #fff;\n            height: 1px;\n            position: absolute;\n            bottom: -1px;\n            left: 0;\n            right: 0; } }\n\n@media screen and (min-width: 750px) {\n  .FancyTabs-panelInner {\n    -webkit-transition: -webkit-transform 0.3s ease;\n    transition: -webkit-transform 0.3s ease;\n    transition: transform 0.3s ease;\n    transition: transform 0.3s ease, -webkit-transform 0.3s ease; }\n    .FancyTabs-panelInner.is-enter {\n      -webkit-transform: translateY(-120%);\n              transform: translateY(-120%); }\n    .FancyTabs-panelInner.is-enter-active, .FancyTabs-panelInner.is-leave {\n      -webkit-transform: translateY(0);\n              transform: translateY(0); }\n    .FancyTabs-panelInner.is-leave-active {\n      -webkit-transform: translateY(120%);\n              transform: translateY(120%); } }\n\n@media screen and (max-width: 750px) {\n  .FancyTabs-tablist {\n    margin: 0 auto;\n    width: 70%; }\n    .FancyTabs-tablistItem {\n      display: block; }\n  .FancyTabs-tabInner {\n    padding: 1.5% 1%; } }\n",".FancyTabs-tablist {\n  list-style-type: none;\n  margin: 0;\n  padding: 0; }\n  .FancyTabs-tablistItem {\n    display: inline-block; }\n    @media screen and (min-width: 750px) {\n      .FancyTabs-tablistItem + .FancyTabs-tablistItem {\n        margin-left: 0.3em; } }\n\n.FancyTabs-panel {\n  border-top: 5px solid #2697d1;\n  padding: 1em;\n  position: relative;\n  z-index: 2;\n  background: rgba(0, 0, 0, 0.025);\n  overflow: hidden; }\n\n.FancyTabs-tab {\n  cursor: pointer; }\n  .FancyTabs-tab:focus {\n    outline: 0; }\n  .FancyTabs-tabInner {\n    border: 1px solid transparent;\n    border-bottom: 0;\n    position: relative;\n    padding: 15px 20px;\n    background: #f1f1f1;\n    position: relative;\n    transition: transform 0.2s ease-out, background 0.2s linear;\n    -webkit-transition: -webkit-transform 0.2s ease-out,\r background 0.2s linear; }\n    @media screen and (min-width: 750px) {\n      .FancyTabs-tabInner {\n        transform: translateY(5px);\n        -webkit-transform: translateY(5px); } }\n    .FancyTabs-tabInner.is-active {\n      background: #2697d1;\n      border-color: #41d0cb;\n      border-width: 1px;\n      color: #fff;\n      text-decoration: none; }\n      @media screen and (min-width: 750px) {\n        .FancyTabs-tabInner.is-active {\n          transform: translateY(0);\n          -webkit-transform: translateY(0); }\n          .FancyTabs-tabInner.is-active::after {\n            content: \"\";\n            background: #fff;\n            height: 1px;\n            position: absolute;\n            bottom: -1px;\n            left: 0;\n            right: 0; } }\n\n@media screen and (min-width: 750px) {\n  .FancyTabs-panelInner {\n    transition: transform 0.3s ease; }\n    .FancyTabs-panelInner.is-enter {\n      transform: translateY(-120%); }\n    .FancyTabs-panelInner.is-enter-active, .FancyTabs-panelInner.is-leave {\n      transform: translateY(0); }\n    .FancyTabs-panelInner.is-leave-active {\n      transform: translateY(120%); } }\n\n@media screen and (max-width: 750px) {\n  .FancyTabs-tablist {\n    margin: 0 auto;\n    width: 70%; }\n    .FancyTabs-tablistItem {\n      display: block; }\n  .FancyTabs-tabInner {\n    padding: 1.5% 1%; } }\n"]}